|clkgen
clk => clk.IN2
rx => rx.IN1
button => exitbutton~reg0.DATAIN
button => ledbutton~reg0.DATAIN
exit << exit~reg0.DB_MAX_OUTPUT_PORT_TYPE
exitbutton << exitbutton~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx << UART_Difference:UART_Difference.UART_tx
ledbutton << ledbutton~reg0.DB_MAX_OUTPUT_PORT_TYPE


|clkgen|UART_Difference:UART_Difference
clk => UART_tx~reg0.CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => difference[0].CLK
clk => rx_data[0].CLK
clk => rx_data[1].CLK
clk => rx_data[2].CLK
clk => rx_data[3].CLK
clk => rx_data[4].CLK
clk => rx_data[5].CLK
clk => rx_data[6].CLK
clk => rx_data[7].CLK
clk => tx_data[0].CLK
clk => tx_data[1].CLK
clk => tx_data[2].CLK
clk => tx_data[3].CLK
clk => tx_data[4].CLK
clk => tx_data[5].CLK
clk => tx_data[6].CLK
clk => tx_data[7].CLK
clk => state~6.DATAIN
rst => bit_counter[0].ACLR
rst => bit_counter[1].ACLR
rst => bit_counter[2].ACLR
rst => bit_counter[3].ACLR
rst => difference[0].ACLR
rst => rx_data[0].ACLR
rst => rx_data[1].ACLR
rst => rx_data[2].ACLR
rst => rx_data[3].ACLR
rst => rx_data[4].ACLR
rst => rx_data[5].ACLR
rst => rx_data[6].ACLR
rst => rx_data[7].ACLR
rst => tx_data[0].ACLR
rst => tx_data[1].ACLR
rst => tx_data[2].ACLR
rst => tx_data[3].ACLR
rst => tx_data[4].ACLR
rst => tx_data[5].ACLR
rst => tx_data[6].ACLR
rst => tx_data[7].ACLR
rst => state~8.DATAIN
rst => UART_tx~reg0.ENA
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => state.OUTPUTSELECT
UART_rx => rx_data[7].DATAIN
UART_tx <= UART_tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


|clkgen|genpll:genpll
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|clkgen|genpll:genpll|altpll:altpll_component
inclk[0] => genpll_altpll:auto_generated.inclk[0]
inclk[1] => genpll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|clkgen|genpll:genpll|altpll:altpll_component|genpll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


